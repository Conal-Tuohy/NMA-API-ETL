<VirtualHost *:80>
        # The ServerName directive sets the request scheme, hostname and port that
        # the server uses to identify itself. This is used when creating
        # redirection URLs. In the context of virtual hosts, the ServerName
        # specifies what hostname must appear in the request's Host: header to
        # match this virtual host. For the default virtual host (this file) this
        # value is not decisive as it is used as a last resort host regardless.
        # However, you must set it for any further virtual host explicitly.
        #ServerName data.nma.gov.au

        ServerAdmin webmaster@localhost
        DocumentRoot /var/www/html

        # Available loglevels: trace8, ..., trace1, debug, info, notice, warn,
        # error, crit, alert, emerg.
        # It is also possible to configure the loglevel for particular
        # modules, e.g.
        #LogLevel info ssl:warn

        ErrorLog ${APACHE_LOG_DIR}/error.log
        CustomLog ${APACHE_LOG_DIR}/access.log combined

        # Authentication and authorization
        <Location /fuseki/>
           AuthType          basic
           AuthName          "SPARQL Graph Store"
           AuthBasicProvider file
           AuthUserFile      graph-store-users.htpasswd
           Require           valid-user
           # Don't proxy login credentials to upstream server (Tomcat)
           RequestHeader unset Authorization
        </Location>
        <Location /solr/>
           AuthType          basic
           AuthName          "Solr Search Engine"
           AuthBasicProvider file
           AuthUserFile      admin-users.htpasswd
           Require           valid-user
           # Don't proxy login credentials to upstream server (Solr)
           RequestHeader unset Authorization
        </Location>
        <Location /konga/>
           AuthType          basic
           AuthName          "Konga Admin"
           AuthBasicProvider file
           AuthUserFile      admin-users.htpasswd
           Require           valid-user
           # Don't proxy login credentials to upstream server (Solr)
           RequestHeader unset Authorization
        </Location>
        <Location /nagios/>
           AuthType          basic
           AuthName          "Nagios Monitoring"
           AuthBasicProvider file
           AuthUserFile      admin-users.htpasswd
           Require           valid-user
           # Don't proxy login credentials to upstream server (Solr)
           RequestHeader unset Authorization
        </Location>
        <Location /usage.html>
           AuthType          basic
           AuthName          "GoAccess Monitoring"
           AuthBasicProvider file
           AuthUserFile      admin-users.htpasswd
           Require           valid-user
           # Don't proxy login credentials to upstream server (Solr)
           RequestHeader unset Authorization
        </Location>
        
        ProxyPass "/fuseki/" "http://localhost:8080/fuseki/" retry=0 timeout=5
        ProxyPassReverse "/fuseki/" "http://localhost:8080/fuseki"

        ProxyPass "/solr/" "http://localhost:8983/solr/" retry=0 timeout=5
        ProxyPassReverse "/solr/" "http://localhost:8983/"

        ProxyPass "/konga/" "http://localhost:1338/" retry=0 timeout=5
        ProxyPassReverse "/konga/" "http://localhost:1338/"

        # allow root /var/www/html/*.html files to bypass Kong
        ProxyPassMatch ^/[^.]+\.html$ !

        # Nagios
		
        ProxyPass /nagios !
        Alias /nagios "/usr/local/nagios/share"

        <Directory "/usr/local/nagios/share">
#          SSLRequireSSL
           Options None
           AllowOverride None
           <IfVersion >= 2.3>
              <RequireAll>
                 Require all granted
#                Require host 127.0.0.1
                 AuthName "Nagios Access"
                 AuthType Basic
                 AuthUserFile /etc/apache2/admin-users.htpasswd
                 Require valid-user
              </RequireAll>
           </IfVersion>
           <IfVersion < 2.3>
              Order allow,deny
              Allow from all
#             Order deny,allow
#             Deny from all
#             Allow from 127.0.0.1
              AuthName "Nagios Access"
              AuthType Basic
              AuthUserFile /etc/apache2/admin-users.htpasswd
              Require valid-user
           </IfVersion>
        </Directory>

        ScriptAlias /nagios/cgi-bin "/usr/local/nagios/sbin"

        <Directory "/usr/local/nagios/sbin">
#          SSLRequireSSL
           Options ExecCGI
           AllowOverride None
           <IfVersion >= 2.3>
              <RequireAll>
                 Require all granted
#                Require host 127.0.0.1
                 AuthName "Nagios Access"
                 AuthType Basic
                 AuthUserFile /etc/apache2/admin-users.htpasswd
                 Require valid-user
              </RequireAll>
           </IfVersion>
           <IfVersion < 2.3>
              Order allow,deny
              Allow from all
#             Order deny,allow
#             Deny from all
#             Allow from 127.0.0.1
              AuthName "Nagios Access"
              AuthType Basic
              AuthUserFile /etc/apache2/admin-users.htpasswd
              Require valid-user
           </IfVersion>
        </Directory>

        ProxyPass "/" "http://localhost:8000/"
        ProxyPassReverse "/" "http://localhost:8000/"
        
</VirtualHost>

# vim: syntax=apache ts=4 sw=4 sts=4 sr noet
